[{"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\index.js":"1","E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\App.js":"2","E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\reducers\\index.js":"3","E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\reducers\\fetchData.js":"4","E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\actions\\index.js":"5","E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\child\\Child.jsx":"6"},{"size":597,"mtime":1607005432516,"results":"7","hashOfConfig":"8"},{"size":4971,"mtime":1607005156957,"results":"9","hashOfConfig":"8"},{"size":145,"mtime":1606959942606,"results":"10","hashOfConfig":"8"},{"size":505,"mtime":1607002221797,"results":"11","hashOfConfig":"8"},{"size":1550,"mtime":1607002221796,"results":"12","hashOfConfig":"8"},{"size":1982,"mtime":1607005227814,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n6o8lj",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\index.js",[],"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\App.js",["28","29","30","31"],"import './App.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions';\r\nimport Child from './child/Child';\r\nimport React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.onSearchFiltering = this.onSearchFiltering.bind(this);\r\n    this.onMenuClicked = this.onMenuClicked.bind(this);\r\n    this.onChangePagenation = this.onChangePagenation.bind(this);\r\n    this.state = {\r\n      menuList: [\"Channels\", \"Optimization\", \"Reporting\", \"Dialer\", \"Voice Analytics\"],\r\n      childList: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchAllData(); // when enter the first page, all apps is displayed.\r\n  }\r\n\r\n  onChangePagenation(e) { // when pageNate changed, it occurs\r\n    if (this.props.page_num === Math.ceil(this.props.childList.length / 3) && e === \"right\") return; //return when page number is last and click right arrow button\r\n    if (this.props.page_num === 1 && e === \"left\") return; // return when page number is first and click left arrow button\r\n    if (this.props.page_num === 0 && e === \"left\") return; //return when enter the first and click left arrow button\r\n    if (e === \"right\") this.props.setPageNum(this.props.page_num + 1);\r\n    else if (e === \"left\") this.props.setPageNum(this.props.page_num - 1)\r\n    else this.props.setPageNum(e);\r\n  }\r\n  onSearchFiltering(e) { //when filter apps by input data\r\n    let fil_val = e.target.value;\r\n\r\n    this.props.fetchData(this.props.selectedMenuId, fil_val);\r\n  }\r\n  onMenuClicked(e) { // when click left menu list\r\n    \r\n    this.props.fetchData(e, null)\r\n  }\r\n  render() {\r\n\r\n    /*-- Category List Section. All categories in the left menu are sorted by ascending order --*/\r\n    const sorted_menu_data = this.state.menuList.slice();\r\n    sorted_menu_data.sort();\r\n    const menu_data = sorted_menu_data.map((item, index) => {\r\n      return <li key={index}><a href=\"#\" key={index} onClick={() => this.onMenuClicked(item)}>{item}</a></li>\r\n    })\r\n    /*-- All categories in the left menu are sorted by ascending order --*/\r\n\r\n    /*-- extract 3 apps which have to display by page number --*/\r\n    let tmp = this.props.childList.slice();\r\n    let view_data = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      let pgNum = Number(this.props.page_num);\r\n      if (pgNum === 0) pgNum++;\r\n      if (tmp[i + (pgNum - 1) * 3])\r\n        view_data.push(tmp[i + (pgNum - 1) * 3])\r\n    }\r\n    /*-- extract 3 apps which have to display by page number --*/\r\n    \r\n    /*-- sort by ascending order of the sum of the plans price --*/\r\n    let temp_ary = [];\r\n    for (let i = 0; i < view_data.length; i++) {\r\n      let sum = 0;\r\n      let a = {};\r\n      for (let j = 0; j < view_data[i].subscriptions.length; j++) {\r\n        sum += view_data[i].subscriptions[j].price;\r\n      }\r\n      a.order = i;\r\n      a.sum = sum;\r\n      temp_ary.push(a);\r\n    }\r\n    temp_ary.sort(function (a, b) { return a.sum - b.sum });\r\n    let DataAry = [];\r\n    for (let i = 0; i < temp_ary.length; i++) {\r\n      DataAry.push(view_data[temp_ary[i].order]);\r\n    }\r\n    /*-- sort by ascending order of the sum of the plans price --*/\r\n\r\n    /*-- configure app data which display --*/\r\n    let childData = []\r\n    if (view_data) {\r\n      childData = DataAry.map((item, index) => {\r\n        return <Child data={item} category={this.props.selectedMenuId} key={item.id}></Child>\r\n      })\r\n    }\r\n    /*-- configure app data which display --*/\r\n\r\n    /*-- configure pageNate data --*/\r\n    const pageCount = Math.ceil(this.props.childList.length / 3);\r\n    const pageSecionData = [];\r\n\r\n    for (let i = 0; i < pageCount; i++) {\r\n      const p = <li key={i}><a href=\"#\" key={i} onClick={() => this.onChangePagenation(i + 1)}>{i + 1}</a></li>\r\n      pageSecionData.push(p);\r\n    }\r\n    /*-- configure pageNate data --*/\r\n\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <nav className=\"nav-categories\">\r\n          <h2>Categories</h2>\r\n\r\n          <ul className=\"nav-menu\">\r\n            {menu_data}\r\n          </ul>\r\n        </nav>\r\n        <section className=\"apps-list\">\r\n          <header>\r\n            <input type=\"text\" placeholder=\"Search by App\" onChange={this.onSearchFiltering} />\r\n          </header>\r\n          {this.props.childList ? childData : []}\r\n          <ul className=\"pagination\">\r\n            <li><a href=\"#\" onClick={() => this.onChangePagenation(\"left\")}>&lt;</a></li>\r\n            {pageSecionData}\r\n            <li><a href=\"#\" onClick={() => this.onChangePagenation(\"right\")}>&gt;</a></li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    childList: state.fetchDataReducer.fetch_data ? state.fetchDataReducer.fetch_data : [],\r\n    page_num: state.fetchDataReducer.page_num > 0 ? state.fetchDataReducer.page_num : 1,\r\n    selectedMenuId: state.fetchDataReducer.selectedMenuId\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(App);\r\n",["32","33"],"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\reducers\\index.js",[],"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\reducers\\fetchData.js",[],"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\actions\\index.js",[],"E:\\my_project\\apps-list-mini-challenge\\app-list-mini-challenge\\src\\child\\Child.jsx",[],{"ruleId":"34","severity":1,"message":"35","line":45,"column":30,"nodeType":"36","endLine":45,"endColumn":95},{"ruleId":"34","severity":1,"message":"35","line":93,"column":29,"nodeType":"36","endLine":93,"endColumn":96},{"ruleId":"34","severity":1,"message":"35","line":113,"column":17,"nodeType":"36","endLine":113,"endColumn":77},{"ruleId":"34","severity":1,"message":"35","line":115,"column":17,"nodeType":"36","endLine":115,"endColumn":78},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-global-assign","no-unsafe-negation"]